{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anagh\\\\Desktop\\\\ReactBasics\\\\app\\\\src\\\\components\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport Header from \"./Header\";\nimport AddContact from \"./AddContact\";\nimport ContactList from \"./ContactList\";\n\n// Define LOCAL_STORAGE_KEY outside of the App function\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LOCAL_STORAGE_KEY = \"contacts\";\nfunction App() {\n  _s();\n  const [contacts, setContacts] = useState([]);\n  const addContactHandle = contact => {\n    setContacts([...contacts, contact]);\n  };\n  useEffect(() => {\n    // Retrieve contacts from localStorage\n    const retrieveContacts = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    if (retrieveContacts) setContacts(retrieveContacts);\n  }, []); // Run only once on component mount\n\n  useEffect(() => {\n    // Save contacts to localStorage whenever contacts state changes\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(contacts));\n  }, [contacts]); // Run whenever contacts state changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui container\",\n    style: {\n      margin: \"50px auto\",\n      padding: \"20px\",\n      boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\",\n      borderRadius: \"5px\",\n      backgroundColor: \"#f9f9f9\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddContact, {\n      addContactHandler: addContactHandle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n      contacts: contacts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WajkMADgk+4Cka/G5/8OzNt4WxA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","AddContact","ContactList","jsxDEV","_jsxDEV","LOCAL_STORAGE_KEY","App","_s","contacts","setContacts","addContactHandle","contact","retrieveContacts","JSON","parse","localStorage","getItem","setItem","stringify","className","style","margin","padding","boxShadow","borderRadius","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","addContactHandler","_c","$RefreshReg$"],"sources":["C:/Users/anagh/Desktop/ReactBasics/app/src/components/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport Header from \"./Header\";\nimport AddContact from \"./AddContact\";\nimport ContactList from \"./ContactList\";\n\n// Define LOCAL_STORAGE_KEY outside of the App function\nconst LOCAL_STORAGE_KEY = \"contacts\";\n\nfunction App() {\n  const [contacts, setContacts] = useState([]);\n\n  const addContactHandle = (contact) => {\n    setContacts([...contacts, contact]);\n  };\n\n  useEffect(() => {\n    // Retrieve contacts from localStorage\n    const retrieveContacts = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    if (retrieveContacts) setContacts(retrieveContacts);\n  }, []); // Run only once on component mount\n\n  useEffect(() => {\n    // Save contacts to localStorage whenever contacts state changes\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(contacts));\n  }, [contacts]); // Run whenever contacts state changes\n\n  return (\n    <div className=\"ui container\" style={{ margin: \"50px auto\", padding: \"20px\", boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\", borderRadius: \"5px\", backgroundColor: \"#f9f9f9\" }}>\n      <Header />\n      <AddContact addContactHandler={addContactHandle}/>\n      <ContactList contacts={contacts}/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,WAAW,MAAM,eAAe;;AAEvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,iBAAiB,GAAG,UAAU;AAEpC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMY,gBAAgB,GAAIC,OAAO,IAAK;IACpCF,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEG,OAAO,CAAC,CAAC;EACrC,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACd;IACA,MAAMa,gBAAgB,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAACX,iBAAiB,CAAC,CAAC;IAC5E,IAAIO,gBAAgB,EAAEH,WAAW,CAACG,gBAAgB,CAAC;EACrD,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAERb,SAAS,CAAC,MAAM;IACd;IACAgB,YAAY,CAACE,OAAO,CAACZ,iBAAiB,EAAEQ,IAAI,CAACK,SAAS,CAACV,QAAQ,CAAC,CAAC;EACnE,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEhB,oBACEJ,OAAA;IAAKe,SAAS,EAAC,cAAc;IAACC,KAAK,EAAE;MAAEC,MAAM,EAAE,WAAW;MAAEC,OAAO,EAAE,MAAM;MAAEC,SAAS,EAAE,2BAA2B;MAAEC,YAAY,EAAE,KAAK;MAAEC,eAAe,EAAE;IAAU,CAAE;IAAAC,QAAA,gBACrKtB,OAAA,CAACJ,MAAM;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACV1B,OAAA,CAACH,UAAU;MAAC8B,iBAAiB,EAAErB;IAAiB;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAClD1B,OAAA,CAACF,WAAW;MAACM,QAAQ,EAAEA;IAAS;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/B,CAAC;AAEV;AAACvB,EAAA,CAzBQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AA2BZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}